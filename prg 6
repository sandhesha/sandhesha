//index.js
import React from &#39;react&#39;;
import ReactDOM from &#39;react-dom/client&#39;;
import &#39;./index.css&#39;;
import App from &#39;./App&#39;;
import reportWebVitals from &#39;./reportWebVitals&#39;;
const root = ReactDOM.createRoot(document.getElementById(&#39;root&#39;));
root.render(
&lt;React.StrictMode&gt;
&lt;App /&gt;
&lt;/React.StrictMode&gt;
);
//App.js
import React from &quot;react&quot;;
import SearchFilter from &quot;./SearchFilter&quot;;
function App() {
return (
&lt;div&gt;
&lt;SearchFilter /&gt;
&lt;/div&gt;
);
}

export default App;
//SearchFilter.jsx /// create inside src folder
import React, { useState } from &quot;react&quot;;
import jsonData from &quot;./data.json&quot;; // Import JSON data

function SearchFilter() {
  const [searchQuery, setSearchQuery] = useState(&quot;&quot;);//Creates a state variable searchQuery to
store the text entered by the user in the search input. It&#39;s initialized as an empty string. setSearchQuery is the
function to update this state.
  const [filteredItems, setFilteredItems] = useState(jsonData); // Initialize with all data
// Creates a state variable filteredItems to store the array of items that match the current search query. It&#39;s initialized with the
entire jsonData array, so initially, all items are displayed

  // Function to handle search input change
  const handleSearchChange = (e) =&gt; {
    const query = e.target.value.toLowerCase();
    setSearchQuery(query);

    // Filter the items based on the search query (searching by name in this example)
    const filtered = jsonData.filter((item) =&gt;
      item.name.toLowerCase().includes(query)
    );
    setFilteredItems(filtered);
  };

  return (
    &lt;div&gt;
      &lt;h2&gt;Search Filter&lt;/h2&gt;
      &lt;input
        type=&quot;text&quot;

        placeholder=&quot;Search...&quot;
        value={searchQuery}
        onChange={handleSearchChange}
      /&gt;
      &lt;ul&gt;
        {filteredItems.map((item, index) =&gt; (
          &lt;li key={index}&gt;
            {item.name} ({item.category}) {/* Accessing object properties */}
          &lt;/li&gt;
        ))}
        {filteredItems.length === 0 &amp;&amp; searchQuery &amp;&amp; &lt;p&gt;No items found matching your
search.&lt;/p&gt;}
      &lt;/ul&gt;
    &lt;/div&gt;
  );
}

export default SearchFilter;
data.json // create inside src folder
[
    { &quot;name&quot;: &quot;Banana&quot;, &quot;category&quot;: &quot;Fruit&quot; },
    { &quot;name&quot;: &quot;Carrot&quot;, &quot;category&quot;: &quot;Vegetable&quot; },
    { &quot;name&quot;: &quot;Beans&quot;, &quot;category&quot;: &quot;Vegetable&quot; },
    { &quot;name&quot;: &quot;Brinjal&quot;, &quot;category&quot;: &quot;Vegetable&quot; },
    { &quot;name&quot;: &quot;Pineapple&quot;, &quot;category&quot;: &quot;Fruit&quot; }
  ]
