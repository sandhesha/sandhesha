Student.js
const { MongoClient } = require(&#39;mongodb&#39;);
const uri = &#39;mongodb://127.0.0.1:27017&#39;; // Replace with your MongoDB URI
async function main() {
  const client = new MongoClient(uri);
  try {
    await client.connect();
    const db = client.db(&#39;studentdb&#39;); // Your database name

    const students = db.collection(&#39;students&#39;);

// Example student data
const student= [
      { usn: &#39;4JK23AI001&#39;, name: &#39;Alice&#39;, sem: 4, year_of_admission: 2023 },
      { usn: &#39;4JK24AI005&#39;, name: &#39;Jane&#39;, sem: 2, year_of_admission: 2024 }
    ];
    // Insert the student document
    const result = await students.insertMany(student);
console.log(`Inserted ${result.insertedCount} students with ids: ${Object.values (result.insertedIds)}`);
  } catch(error) {
console.error(&quot;Error inserting data:&quot;, error); // Added error handling
} finally
{
await client.close();
}
} main().catch(console.error);




student.js
const { MongoClient } = require(&#39;mongodb&#39;);

async function searchStudentsByName(partialName) {
  const uri = &#39;mongodb://127.0.0.1:27017&#39;;
  const client = new MongoClient(uri);

  try {
    await client.connect();
    const database = client.db(&#39;studentdb&#39;);
    const students = database.collection(&#39;students&#39;);

    // Create a regex for partial, case-insensitive match-Al or aL or al all are same
    const query = { name: { $regex: partialName, $options: &#39;i&#39; } };

    const cursor = students.find(query);

    const results = await cursor.toArray();

    console.log(`Found ${results.length} students matching &#39;${partialName}&#39;:`);
    results.forEach(student =&gt; console.log(student));
  } finally {
    await client.close();
  }
}
// Example usage:
searchStudentsByName(&#39;Al&#39;);
